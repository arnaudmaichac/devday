@page "/reviews"

@using BeersReviewSPA.Services
@using BeersReviewSPA.Models

@inject BeersReviewSPA.Services.ReviewProvider reviewsProvider

<h1>Beer Reviews</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (reviews == null)
{
    <p><em>Loading...</em></p>
}
else
{

    @*@{
        ViewData["Title"] = "Reviews";

        var tabDefinitions = new[]
        {
        new { Name = "Approved", Images = Model.Where(i => i.IsApproved == true).ToList(), Active = true },
        new { Name = "Rejected", Images = Model.Where(i => i.IsApproved == false).ToList(), Active = false },
        new { Name = "Pending", Images = Model.Where(i => !i.IsApproved.HasValue).ToList(), Active = false },
    };
    }*@

    <div class="container-fluid grid-page">
        <div class="row">
            <div class="col-md-4 offset-md-8">
                <a href="@*@Url.Action("Create")*@" class="button">
                    <i class="glyphicon glyphicon-plus"></i> add beer review
                </a>
            </div>
        </div>

        <div>
            <ul class="nav nav-tabs" role="tablist">
                @*@foreach (var tab in tabDefinitions)
            {
                <li role="presentation" class="nav-item">
                    <a class="@(tab.Active ? "nav-link active" : "nav-link")" href="#@tab.Name" aria-controls="@tab.Name" role="tab" data-toggle="tab">@tab.Name (@tab.Images.Count)</a>
                </li>
            }*@
            </ul>

            <div class="tab-content">
                @*<div role="tabpanel" @*class="tab-pane @(tab.Active ? "active" : "")" id="@tab.Name"*@>
                <div class="row">
                    @foreach (var review in reviews)
                    {
                        <div class="col-md-4 review">
                            <a href="">
                                <div class="thumb" style="background-image: url(@review.MediaUrl)">
                                    <div class="thumb-text">
                                        @review.ReviewText
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
            @*@foreach (var tab in tabDefinitions){

            <div role="tabpanel" class="tab-pane @(tab.Active ? "active" : "")" id="@tab.Name">
                <div class="row">
                    @foreach (var image in tab.Images)
                    {
                        <div class="col-md-4 review">
                            <a href="@Url.Action("Details", new { id = image.RowKey })">
                                <div class="thumb" style="background-image: url(@image.MediaUrl)">
                                    <div class="thumb-text">
                                        @image.ReviewText
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        }*@
            @*</div>*@
        </div>
    </div>

}

@code {
    private IEnumerable<BeerReview> reviews;

    protected override async Task OnInitializedAsync()
    {
        reviews = reviewsProvider.GetReviewsAsync();
    }
}
